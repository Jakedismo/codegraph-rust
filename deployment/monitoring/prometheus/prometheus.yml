global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'codegraph-production'
    environment: 'production'

rule_files:
  - "/etc/prometheus/rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      path_prefix: "/"
      scheme: http
      timeout: 30s
      api_version: v2

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Main application - CodeGraph API
  - job_name: 'codegraph-api'
    static_configs:
      - targets: ['host.docker.internal:3000']  # Adjust if running in different setup
    scrape_interval: 5s  # High frequency for main app
    metrics_path: '/metrics'
    scrape_timeout: 4s
    honor_labels: false
    honor_timestamps: true
    scheme: http
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'host.docker.internal:3000'

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        regex: '.*'
        target_label: __tmp_hostname
        replacement: 'codegraph-host'
      - source_labels: [__tmp_hostname]
        target_label: hostname

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: '/metrics'
    honor_labels: true
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: service_name

  # Elasticsearch metrics
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    scrape_interval: 30s
    metrics_path: '/_prometheus/metrics'
    scrape_timeout: 10s

  # Alertmanager self-monitoring
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Grafana self-monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Logstash monitoring
  - job_name: 'logstash'
    static_configs:
      - targets: ['logstash:9600']
    scrape_interval: 30s
    metrics_path: '/_node/stats'
    scrape_timeout: 10s

  # Application health checks with faster scraping
  - job_name: 'health-checks'
    static_configs:
      - targets: ['host.docker.internal:3000']
    scrape_interval: 10s  # Fast health monitoring
    metrics_path: '/health'
    scrape_timeout: 5s
    params:
      format: ['prometheus']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        target_label: health_check
        replacement: 'application'

  # Business metrics scraping
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['host.docker.internal:3000']
    scrape_interval: 60s  # Less frequent for business metrics
    metrics_path: '/metrics/business'
    scrape_timeout: 10s
    params:
      format: ['prometheus']

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: "high_cardinality_.*"
#         action: drop

# Storage configuration
storage:
  tsdb:
    retention_time: "30d"
    retention_size: "10GB"
    wal_segment_size: "128MB"
    min_block_duration: "2h"
    max_block_duration: "25h"